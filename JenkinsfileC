pipeline {
    agent any
    
    environment {
        PATH = "/usr/local/bin:$PATH"
    }

  stages {
        stage('Build') {
            steps {
                echo 'Building the project with Gradle...'
                sh './gradlew build'
            }
        }

        stages {
        stage('Test') {
            steps {
                echo 'Running tests with Maven...'
                sh 'mvn test'
            }
        }

        stages {
        stage('Run') {
            steps {
                echo 'Running the Docker container...'
                sh 'docker run -p 8080:80 your-image-name'
            }

            }
        }

        post {
        success {
            echo 'Post-build actions for success...'
            // Add your post-build success actions here
            // For example, notify success or trigger additional jobs
            }
        }

     stage('SonarQube Scan') {
            steps {
                echo 'Running SonarQube scan...'
                withSonarQubeEnv('Your_SonarQube_Environment_Variable') {
                    sh 'mvn sonar:sonar'
            }
        }

        stages {
        stage('Static Code Analysis') {
            steps {
                echo 'Running static code analysis...'
                sh 'YourStaticCodeScanner'
                // Replace 'YourStaticCodeScanner' with the actual command for your static code analysis tool

            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Ready for the next steps.'
            // Add success post-build actions here
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
            // Add failure handling or notifications here
        }
    }
}

